TIMETABLE
scheme testTimeTable = 
extend TIMETABLE with
class
	value
		--net : Net = ["A" +> (2, {}), "B" +>(3, {("A","B",(3,10,2))}), "C" +>(2,{})],
		netValue: Net = [	"A" +> (2, {("A","B",(3,10,2))}), 
						 	"B" +> (3, {("A","B",(3,10,2)),("B","C",(3,12,4)),("B","D",(2,7,3))}), 
						 	"C" +> (2, {("B","C",(3,12,4))}),
						 	"D" +> (2, {("B","D",(2,7,3))})
						 	],
				
		vaplan: Plan = <.("A",0,1),("B",12,14),("C",28,32).>,
		unvaplan2: Plan = <.("A",0,1),("B",12,14),("C",20,32).>,
		vaplan3: Plan = <.("D",0,1),("B",12,14),("A",28,32).>,
		unVaplan: Plan = <.("A",0,1),("B",12,14),("C",28,32),("A",28,32).>,
		
		T1Plan: Plan = <.	("A",1,2),
							("B",13,15),
							("C",29,33).>,
		T2Plan: Plan = <.	("A",0,1),
							("B",12,14),
							("C",28,32),
							("B",46,48),
							("A",59,60)
							.>,
		T3Plan: Plan = <.	("A",2,4),
							("B",14,16),
							("C",30,34).>,
		T4Plan: Plan = <.	("A",3,5),
							("B",15,17),
							("C",31,35).>,
		
		TimeTableOverlapping: 
					TimeTable = ["T1" +> T1Plan, 
								"T2" +> T2Plan,
								"T3" +> T3Plan,
								"T4" +> T4Plan],
		TimeTableOverlapOK:
					TimeTable = ["T1" +> T1Plan, 
								"T2" +> T2Plan,
								"T3" +> T3Plan],
		
		timeTable: TimeTable = ["tram1" +> <.	("A",0,1),
												("B",12,14),
												("C",28,32),
												("B",46,48),
												("A",59,60).>],
		wrtimeTable: TimeTable = ["tram1" +> <.	("A",0,1),
												("B",12,14),
												("C",28,32),
												("D",34,54).>],
		wholeTimeTable: TimeTable = ["tram1" +> <.	("A",0,1),
													("B",12,14),
													("C",28,32),
													("B",46,48),
													("A",59,60).>, 
									"tram2"+> <.	("D",0,2),
													("B",11,13),
													("A",28,32),
													("B",47,50),
													("D",58,60).>]
													
	test_case
		--[empty] empty,
		--check TimeTable	
		--[addTram]addTram("tram2",timeTable),
		--[addTram1]addTram("tram3",timeTable),
		--[addStop]addStop("tram1","B",46,48,timeTable),
		--[addStop1]addStop("tram1","D",46,48,timeTable),
		
		--check plan
		[isValidPlan]isValidPlan(unVaplan,netValue),
		[isValidPlan1]isValidPlan(vaplan,netValue),
		[isValidPlan2]isValidPlan(unvaplan2,netValue),
		
		--[timeCompare]timeCompare(11,13,3),
		--[timeCompare1]timeCompare(12,9,2),
		--[isValidPlan3]isValidPlan(vaplan3,netValue)
		
		--[getNewPlan]getNewPlan(vaplan,netValue),
		--[getNewPlan1]getNewPlan(getNewPlan(vaplan,netValue),netValue),
		
		[isWellformed]isWellformed(timeTable,netValue),
		[isWellformed1]isWellformed(wrtimeTable,netValue),
		--[isWellformed2]isWellformed(wholeTimeTable,netValue)
		
		[retrievePairCombination1] retrievePairCombination(T1Plan,<..>),
		[retrievePairCombination2] retrievePairCombination(T2Plan,<..>),
		
		-- testing if a pair of stops are overlapping timewise
		[pairsNotConflicting] arePairConflicting(
						 	(("A",0,1),("B",10,14)),
							(("A",1,2),("B",21,15)),netValue),
		[pairsConflicting] arePairConflicting(
							(("A",0,1),("B",10,14)),
							(("A",1,2),("B",20,15)),netValue),
							
		[detectConnectionOverflowOK1] detectConnectionOverflow(wholeTimeTable,netValue),
		[detectConnectionOverflow2OK2] detectConnectionOverflow(TimeTableOverlapOK,netValue),
		[detectConnectionOverflow3] detectConnectionOverflow(TimeTableOverlapping,netValue)
		
end
